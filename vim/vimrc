

"""""""" BASIC OPTIONS

" Set off compatibility with vi editor
" TODO: what does it mean?
set nocompatible

" Enable syntax and plugins (for netrw)
syntax enable
filetype plugin on

" turn hybrid line numbers on
set number relativenumber
set nu rnu

augroup numbertoggle
  autocmd!
  autocmd BufEnter,FocusGained,InsertLeave * set relativenumber
  autocmd BufLeave,FocusLost,InsertEnter   * set norelativenumber
augroup END

" Set smart tab behaviour with default tab size = 2
set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab

set autoindent

" Read .vimrc file from current directory
set exrc



" Show vertical stop
" set cc=100

"""""""" FINDING FILES

" Search down into subfolders
" Provides tab-completion for all file-related tasks
" define specific set path in project
"set path+=**

" Display all matching files when we tab complete
set wildmenu

" With this options we can:
" - hit tab to :find by partial match
" - use * to make it fuzzy
" - :b lets you autocomplete any open buffer




"""""""" TAG JUMPING

" Create the `tags` file (requires ctags to be installed)
command! MakeTags !ctags -R --extras=+f .

" After creation tags in project we can:
" - use ^] to jump to tab under cursor
" - use g^] for ambiguous tags
" - use ^t to jump back up the tag stack

" Consider also rusty-tags.vi file as a tags source for rust projects
" autocmd BufRead *.rs :setlocal tags=./rusty-tags.vi;/


"""""""" AUTOCOMPLETE

" HIGHLIGHTS:
" - ^x^n for JUST this file
" - ^x^f for filenames (works with our path trick!)
" - ^x^] for tags only
" - ^n for anything specified by the 'complete' option
" - use ^n and ^p to go back and forth in the suggestion list
" - read other good stuff in |ins-completion|



""""""""" FILE BROWSING

" Tweaks for browsing
" disable banner
let g:netrw_banner=0
" open in prior window
let g:netrw_browse_split=4
" open splits to the right
let g:netwr_altv=1
" tree view
let g:netrw_liststyle=3
let g:netrw_list_hide=netrw_gitignore#Hide()
let g:netrw_list_hide.=',\(^\|\s\s\)\zs\.\S\+'

" With this options we can:
" - :edit a folder to open a file brower
" - <CR>/v/t to open in an h-split/v-split/tab
" - check |netw-browse-maps| for more mappings

" rust.vim plugin sets the recommended style for rust files
" with tabstop=8 shiftwidth=4 etc.
" for a while I want to leave HMP like style
" so setting variable below to 0 force rust.vim not to set the style
" let g:rust_recommended_style = 0

" autocomplete brackets
inoremap ( ()<left>
inoremap [ []<left>
inoremap { {}<left>
inoremap {<CR> {<CR>}<ESC>O
inoremap {;<CR> {<CR>};<ESC>O

" autosave
" just press \s in normal mode
noremap <Leader>s :update<CR>


" highlight current line
set cursorline






"""""""""""""" SEARCH

" To search specific item you can:
" - copy it using 'yank' command
" - paste it into command line mode using ctrl_r + \" key

" Highligh matched string
set hlsearch

" Press Space to turn off highlighting and clear any message already displayed.
:nnoremap <silent> <Space> :nohlsearch<Bar>:echo<CR>

packloadall


" Setup persistent updo
set undofile
set undodir=~/.vim/undodir
